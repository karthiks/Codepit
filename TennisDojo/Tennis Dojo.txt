Tennis Dojo
===========

- Tennis "Match"
	- Create New Match
		- Requires Two "Players"
	- Start(Number of Sets)
		- Number of "Sets" Must be 3 or 5.
		- Returns a New "Set" (Cannot Create Set Without a Match)
	- First "Player" to 3 or 5 "Sets" Wins the Match
	- Once Match is "Won" New Sets Cannot Be Started.

- "Sets"
	- .CreateGame Returns a New "Game"
	- Cannot Create More than 1 Game/Set...
	- ... Unless Previous Game Completed

- "Games"
	- Played as Part of a "Set"
	- "Player(s)" Score "Points"
	- First to 4 Points (and 2 Points Lead - "Advantage") Wins the Game
	- If Player Without Advantage Equalises, "Deuce".
	- Non-Scoring Player in "Deuce" LOSES Point
	  (Placing Other at "Advantage").
	- "Score" Returns Current Game Score
		- {Player1Points}:{Player2Points}
		- "A" for Player with Advantage (e.g. "1:A")
		- "Deuce" for Deuce
		
Completion Steps
================

START SIMPLE! What is the smallest/easiest thing to move this forward?
For me, I think it will be to create the "Return Current Game Score". Having this will make checking the progress of "Games" easier.

First Test, "Create a Game Score with 0 Points".
	- Simply Create Some Public Fields in GameScore.
Second Tests: "Player 1 Scores Point, Points Should be 1-0".
	- Note We Are Testing 2x Things (1 and Nil) == 2 Tests
	- To Pass, Simply Increment the Player1Score.
	- I Set to "private set" Here - No Way to "Test".
	- Note We Have Code Dupe (New GameScore, Player1Scores).
	- I Created a Factory Method and Helper Extensions.
Additional Basic Tests (Everything Up to "Advantage").
	- Player 2 Scores 1 Points (0-1).
	- Player 1 Scores 1, Player 2 Scores (1-1).
	- Player 1 Scores 2, Player 2 Scores 2 (2-2).	